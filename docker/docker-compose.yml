services:
  backend:
    build: ./backend
    image: tts_backend
    container_name: tts_backend
    ports:
      - "8000:8000"
    networks:
      - app-net
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      DB_PORT: ${DB_PORT}
      LINE_CHANNEL_ACCESS_TOKEN: ${LINE_CHANNEL_ACCESS_TOKEN}
      LINE_CHANNEL_SECRET: ${LINE_CHANNEL_SECRET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    volumes:
      - ./backend:/app
    restart: always

  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command: http backend:8000
    networks:
      - app-net
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
    depends_on:
      - backend
    ports:
      - "4040:4040"

  webhook_updater:
    build: ./scripts
    image: webhook_updater
    container_name: webhook_updater
    command: python set_webhook.py
    depends_on:
      - ngrok
    networks:
      - app-net
    environment:
      LINE_CHANNEL_ACCESS_TOKEN: ${LINE_CHANNEL_ACCESS_TOKEN}

volumes:
  mysql-data:

networks:
  app-net: